# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.8
      uses: actions/setup-python@v4
      with:
        python-version: "3.8"
    - name: Install dependencies
      run: |
        pip install flake8 pytest
        pip install uvicorn
        pip install --force-reinstall httpcore==0.15
        if [ -f app/requirements.txt ]; then pip install -r app/requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Modified mmcv image function
      run: |
        # copy image.py to mmcv location
        cp libs/image.py /opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/mmcv/visualization/image.py
    - name: Test with pytest
      run: |
        ls .
        pytest
      env:
        SUPABASE_URL: ${{secrets.SUPABASE_URL}}
        SUPABASE_KEY: ${{secrets.SUPABASE_KEY}}
        FIREBASE_CREDENTIALS: ${{secrets.FIREBASE_CREDENTIALS}}
